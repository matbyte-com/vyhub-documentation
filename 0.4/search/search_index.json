{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to the VyHub documentation. New to VyHub? We developed VyHub to be as beginner-friendly as possible. Please read the Getting Started Guide to not miss anything in the setup process. Contact Please contact us at info@vyhub.net for further information and support. Feel free to send us suggestions for improvements or recommendations for topics you are missing.","title":"Welcome"},{"location":"#welcome","text":"Welcome to the VyHub documentation.","title":"Welcome"},{"location":"#new-to-vyhub","text":"We developed VyHub to be as beginner-friendly as possible. Please read the Getting Started Guide to not miss anything in the setup process.","title":"New to VyHub?"},{"location":"#contact","text":"Please contact us at info@vyhub.net for further information and support. Feel free to send us suggestions for improvements or recommendations for topics you are missing.","title":"Contact"},{"location":"changelog/","text":"Changelog v0.4.1beta Released: 2022-04-17 Add Discord integration (login, group sync and server status) Add option to set default currency New instances now get a random theme Fix purchase cancelling always causes a notification Fix PayPal not working in production mode Fix cancelling stripe payments not working Fix error when having packets with different currencies in the cart Fix external links not working on mobile Bugfixes The following game integrations need an update: Garry's Mod v0.3.2beta Released: 2022-03-14 Add E-Mail notifications Fix linking accounts not working sometimes Bugfixes v0.3.1beta Released: 2022-03-06 Bugfixes v0.3.0beta Released: 2022-03-05 Add coupon payment gateway Add ability to see/edit/delete applied rewards Improve tickets overview Improve performance Restructure shop Several bugfixes","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v041beta","text":"Released: 2022-04-17 Add Discord integration (login, group sync and server status) Add option to set default currency New instances now get a random theme Fix purchase cancelling always causes a notification Fix PayPal not working in production mode Fix cancelling stripe payments not working Fix error when having packets with different currencies in the cart Fix external links not working on mobile Bugfixes The following game integrations need an update: Garry's Mod","title":"v0.4.1beta"},{"location":"changelog/#v032beta","text":"Released: 2022-03-14 Add E-Mail notifications Fix linking accounts not working sometimes Bugfixes","title":"v0.3.2beta"},{"location":"changelog/#v031beta","text":"Released: 2022-03-06 Bugfixes","title":"v0.3.1beta"},{"location":"changelog/#v030beta","text":"Released: 2022-03-05 Add coupon payment gateway Add ability to see/edit/delete applied rewards Improve tickets overview Improve performance Restructure shop Several bugfixes","title":"v0.3.0beta"},{"location":"quickstart/","text":"Getting Started This is the quickstart guide for VyHub. For additional information, read our further guides. Get your VyHub Instance Using VyHub for your gaming community is as easy as a few clicks are. Create your account on vyhub.net . Go to the Dashboard and click Create Instance . During Beta, you will need a gift code to get an instance. Contact us to get one! Fill out the required details. See instance guide for more information. Click Submit . Your VyHub instance is usually created within a few minutes. Your instance is ready as soon as the status changes to Provisioned . You can find the status by visiting the instance details page. Open your VyHub Instance Congratulations you can now connect and login to your VyHub instance under the domain you have chosen in the installation process. You can find the frontend URL on the details page of your instance. All further steps are accomplished within the settings panel of your VyHub instance (your-domain.com/settings) Connect your Gameserver One of the first things to do is to connect your gameserver with VyHub. Each gameserver is organised in a serverbundle . All servers within a serverbundle are from the same type (e.g. GMOD, Minecraft, Discord) (optional) Navigate to the Server settings and create your serverbundle. We are going to choose the default group for new users in this bundle later. Now it's time to connect your server, which is done in the same settings menu. Follow the displayed instructions. Install the fitting gameserver addon to your server. (For example Garry's Mod ) Additional Information Groups You can now create all the user groups that you want. Memberships in a user group are scoped to a serverbundle. Navigate to the Group settings and create your group. The permission level is used to decide which users can be targeted by a member of the group e.g. A user with permission level 42 can't target another user with the level of 99. A group has properties to control the user right management and access control. Additional to properties, admins have all permissions. More admins can be added on vyhub.net . Now edit the created group, switch to the Properties tab and choose all needed properties. A list of all properties and it's functions can be found here . At the Advanced Properties tab, you can map the VyHub group to an in-game group. Go back to the Server tab, edit your serverbundle and choose a created group as default group. Additional Information Shop Payment Gateways Payment gateways (e.g. Paypal, Stripe) available for your customers can be added in the Payment Gateway settings. You need to provide the VyHub instance with the payment providers secrets . These secrets can be obtained directly from the payment provider after creating an account with them. Additional Information Tax For correct taxation of your sales, tax rules for your target countries must be created. In the General settings of the shop, you can decide whether or not buyers from countries where no tax rule is specified are allowed to use your shop. To provide the correct tax information go to the Tax settings. Additional Information Reward A reward may execute some action after a packet has been applied to a user. Create a reward in the Reward settings. Additional Information Packet Your created packets are available for purchase in the shop. Packets are ordered within categories. Categories are created in the Category settings. A price is set in the Payment tab. Do not forget to select the rewards the user receives after purchasing the packet. Additional Information Customize your Community VyHub is customizable for your needs. Try changing the theme in the theme settings or start creating your own pages in the navigation settings. You can set the community name in the General settings. Congratulations you are all set up!","title":"Quickstart"},{"location":"quickstart/#getting-started","text":"This is the quickstart guide for VyHub. For additional information, read our further guides.","title":"Getting Started"},{"location":"quickstart/#get-your-vyhub-instance","text":"Using VyHub for your gaming community is as easy as a few clicks are. Create your account on vyhub.net . Go to the Dashboard and click Create Instance . During Beta, you will need a gift code to get an instance. Contact us to get one! Fill out the required details. See instance guide for more information. Click Submit . Your VyHub instance is usually created within a few minutes. Your instance is ready as soon as the status changes to Provisioned . You can find the status by visiting the instance details page.","title":"Get your VyHub Instance"},{"location":"quickstart/#open-your-vyhub-instance","text":"Congratulations you can now connect and login to your VyHub instance under the domain you have chosen in the installation process. You can find the frontend URL on the details page of your instance. All further steps are accomplished within the settings panel of your VyHub instance (your-domain.com/settings)","title":"Open your VyHub Instance"},{"location":"quickstart/#connect-your-gameserver","text":"One of the first things to do is to connect your gameserver with VyHub. Each gameserver is organised in a serverbundle . All servers within a serverbundle are from the same type (e.g. GMOD, Minecraft, Discord) (optional) Navigate to the Server settings and create your serverbundle. We are going to choose the default group for new users in this bundle later. Now it's time to connect your server, which is done in the same settings menu. Follow the displayed instructions. Install the fitting gameserver addon to your server. (For example Garry's Mod ) Additional Information","title":"Connect your Gameserver"},{"location":"quickstart/#groups","text":"You can now create all the user groups that you want. Memberships in a user group are scoped to a serverbundle. Navigate to the Group settings and create your group. The permission level is used to decide which users can be targeted by a member of the group e.g. A user with permission level 42 can't target another user with the level of 99. A group has properties to control the user right management and access control. Additional to properties, admins have all permissions. More admins can be added on vyhub.net . Now edit the created group, switch to the Properties tab and choose all needed properties. A list of all properties and it's functions can be found here . At the Advanced Properties tab, you can map the VyHub group to an in-game group. Go back to the Server tab, edit your serverbundle and choose a created group as default group. Additional Information","title":"Groups"},{"location":"quickstart/#shop","text":"","title":"Shop"},{"location":"quickstart/#payment-gateways","text":"Payment gateways (e.g. Paypal, Stripe) available for your customers can be added in the Payment Gateway settings. You need to provide the VyHub instance with the payment providers secrets . These secrets can be obtained directly from the payment provider after creating an account with them. Additional Information","title":"Payment Gateways"},{"location":"quickstart/#tax","text":"For correct taxation of your sales, tax rules for your target countries must be created. In the General settings of the shop, you can decide whether or not buyers from countries where no tax rule is specified are allowed to use your shop. To provide the correct tax information go to the Tax settings. Additional Information","title":"Tax"},{"location":"quickstart/#reward","text":"A reward may execute some action after a packet has been applied to a user. Create a reward in the Reward settings. Additional Information","title":"Reward"},{"location":"quickstart/#packet","text":"Your created packets are available for purchase in the shop. Packets are ordered within categories. Categories are created in the Category settings. A price is set in the Payment tab. Do not forget to select the rewards the user receives after purchasing the packet. Additional Information","title":"Packet"},{"location":"quickstart/#customize-your-community","text":"VyHub is customizable for your needs. Try changing the theme in the theme settings or start creating your own pages in the navigation settings. You can set the community name in the General settings. Congratulations you are all set up!","title":"Customize your Community"},{"location":"central/custom_domain/","text":"Custom domain Read this guide for further information on how to use your own domain with VyHub. You do not need to use your own domain, we offer you a free vyhub.app domain (e.g. gaming.vyhub.app) Buy your own domain at a domain name registrar of your choice (e.g. Namecheap ) Set the domains CNAME record to the corresponding VyHub url Get your own domain A domain name is the name of a website (like vyhub.net or google.com) In this guide we will use Namecheap , which offers good prices and is one of the biggest registrars in the world. Choose your desired domain name, add to cart and checkout Enter a domain name and check for it's availability Add to cart and follow the checkout process You do not need to add any of the \"recommended packages\" namecheap offers. Set the domains CNAME record You need to set the CNAME record to our servers, that you can reach VyHub with your domain. Please search and follow the tutorials on how to set the CNAME record provided by your registrar. CNAME Value Find the value on the instance details page Setting the CNAME with a Namecheap.com domain Follow this guide provided by namecheap. Sign into your Namecheap account Select Domain list on the left Click the Manage button next to your domain Navigate to the Advanced DNS tab Click Add New Record in the Host Records section Select CNAME Record Enter the CNAME value from your instance in the Value column (leave host empty unless you want to use a subdomain e.g. vyhub.yourdomain.com) Click the Save All Changes button","title":"Custom domain"},{"location":"central/custom_domain/#custom-domain","text":"Read this guide for further information on how to use your own domain with VyHub. You do not need to use your own domain, we offer you a free vyhub.app domain (e.g. gaming.vyhub.app) Buy your own domain at a domain name registrar of your choice (e.g. Namecheap ) Set the domains CNAME record to the corresponding VyHub url","title":"Custom domain"},{"location":"central/custom_domain/#get-your-own-domain","text":"A domain name is the name of a website (like vyhub.net or google.com) In this guide we will use Namecheap , which offers good prices and is one of the biggest registrars in the world.","title":"Get your own domain"},{"location":"central/custom_domain/#choose-your-desired-domain-name-add-to-cart-and-checkout","text":"Enter a domain name and check for it's availability Add to cart and follow the checkout process You do not need to add any of the \"recommended packages\" namecheap offers.","title":"Choose your desired domain name, add to cart and checkout"},{"location":"central/custom_domain/#set-the-domains-cname-record","text":"You need to set the CNAME record to our servers, that you can reach VyHub with your domain. Please search and follow the tutorials on how to set the CNAME record provided by your registrar.","title":"Set the domains CNAME record"},{"location":"central/custom_domain/#cname-value","text":"Find the value on the instance details page","title":"CNAME Value"},{"location":"central/custom_domain/#setting-the-cname-with-a-namecheapcom-domain","text":"Follow this guide provided by namecheap. Sign into your Namecheap account Select Domain list on the left Click the Manage button next to your domain Navigate to the Advanced DNS tab Click Add New Record in the Host Records section Select CNAME Record Enter the CNAME value from your instance in the Value column (leave host empty unless you want to use a subdomain e.g. vyhub.yourdomain.com) Click the Save All Changes button","title":"Setting the CNAME with a Namecheap.com domain"},{"location":"central/general/","text":"VyHub Central VyHub Central is the place where you can get your VyHub instance. Link: https://vyhub.net/dashboard","title":"VyHub Central"},{"location":"central/general/#vyhub-central","text":"VyHub Central is the place where you can get your VyHub instance. Link: https://vyhub.net/dashboard","title":"VyHub Central"},{"location":"central/instance/","text":"Instance Creating an instance Instances are created in the central dashboard Using a custom domain Specify the custom domain in the create instance dialog. Setting a CNAME record in your DNS settings is required to use a custom domain. Check out the custom domain guide . Updating an instance Instances can be updated in the edit version dialog on the details page. You can either specify a version or use the auto update functionality. Downgrades are not possible. Admins Admins can be added and removed on the details page by giving the exact VyHub username. Log out and back into your instance to update the users admin status. Removing the admin status If you do not want to wait for the user to log out and back in again (after removing in the central details page), you can force the removal by clicking on the X near the admin status on the users dashboard. Caution: if you did not remove the admin status in the central details page, the user will get its status back after a new log in. Troubleshoot Instance is \"stuck\" in status provisioning while using a custom domain Did you already set your CNAME record? It is needed for the provisioning to work. Is your domain using DDOS protection like Cloudflare? Deactivate any services like this for your (sub)domain. Contact us!","title":"Instance"},{"location":"central/instance/#instance","text":"","title":"Instance"},{"location":"central/instance/#creating-an-instance","text":"Instances are created in the central dashboard","title":"Creating an instance"},{"location":"central/instance/#using-a-custom-domain","text":"Specify the custom domain in the create instance dialog. Setting a CNAME record in your DNS settings is required to use a custom domain. Check out the custom domain guide .","title":"Using a custom domain"},{"location":"central/instance/#updating-an-instance","text":"Instances can be updated in the edit version dialog on the details page. You can either specify a version or use the auto update functionality. Downgrades are not possible.","title":"Updating an instance"},{"location":"central/instance/#admins","text":"Admins can be added and removed on the details page by giving the exact VyHub username. Log out and back into your instance to update the users admin status.","title":"Admins"},{"location":"central/instance/#removing-the-admin-status","text":"If you do not want to wait for the user to log out and back in again (after removing in the central details page), you can force the removal by clicking on the X near the admin status on the users dashboard. Caution: if you did not remove the admin status in the central details page, the user will get its status back after a new log in.","title":"Removing the admin status"},{"location":"central/instance/#troubleshoot","text":"","title":"Troubleshoot"},{"location":"central/instance/#instance-is-stuck-in-status-provisioning-while-using-a-custom-domain","text":"Did you already set your CNAME record? It is needed for the provisioning to work. Is your domain using DDOS protection like Cloudflare? Deactivate any services like this for your (sub)domain. Contact us!","title":"Instance is \"stuck\" in status provisioning while using a custom domain"},{"location":"dev/game_clients/","text":"Guideline for game clients This guide explains how a VyHub game client should be structured. This guide may contain typos and other mistakes, because it is not completely finished yet. Example implementation for Garry's Mod (Lua): https://github.com/matbyte-com/vyhub-gmod Concepts Events If possible, own events should be introduced and named as follows: vyhub_loading_start : Called when addon is loading. vyhub_loading_finish : Called when addon has finished loading. vyhub_api_ready : API client is ready and API is reachable. vyhub_api_failed : API client is not ready because API is not reachable. vyhub_ready : Server information has been loaded from the API or cache. vyhub_ply_connected : Called when a player connected but is not initialized yet. vyhub_ply_initialized : Called when a player has been successfully initialized (user retrieved from API). For application start it should be: vyhub_loading_start -> vyhub_loading_finish -> vyhub_api_ready / vyhub_api_failed -> vyhub_ready morph_user_id Some endpoints (f.e. when creating bans or warnings) support the morph_user_id parameter. If the parameter is set with a user id, the request will be executed as the user which id has been supplied. This has the advantage that permission checks must not be implemented on the client side and allows the server to act on behalf of the user. If the morph_user_id parameter is omitted, a security/permission check must be done on the client before sending the request! Server Config The server needs three values to work: API URL API Key Server ID There should be a config where the admin can insert the values. Startup When the addon is loaded, the server should request information about itself and its serverbundle: GET /server/<id> , where <id> is the server id from the config. Save this information for the runtime of the server and permanently save it to a cache. If the API server is not available, use the data from the cache if the last successful retrieval is not older than a week. Start the routines/register the event listeners of the following components afterwards. Status update The server should send its current status to the API every minute. Collect data of: Number of current players Number of maximum players Map Send it to the API: PATCH /server/<id>; { users_max: ..., users_current: ..., map: ..., is_alive: true } With a version coming soon, also data about online players should be sent. This can be prepared. Extra config In the extra attribute (dict) of a server, additional config options can be supplied. This can vary by game. For example there could be config parameters for reserved slots. User Registration Every user playing on a server should be registered, if not already the case. On player connect, check if the user exists: GET /user/<id>?type=<type> , where <id> is the unique identifier of the Player at the authentication source <type> (e.g. the steam id for STEAM ). If not, create user: POST /user/; { identifier: <id>, type: <type> } If the API doesn't return a valid response for the GET request (404 or 200), retry it every minute. On success, save the user object in a dictionary [Player ID] -> [VyHub user object] . If possible, save the id of the VyHub user in the Player object. Get user data Create a function that returns the VyHub user for a Player ID. The function should only query the API if the user does not exist in the user dictionary. Sync groups On player connect and every few (5) minutes, the groups of a player should be synced. Get the active groups of a user in the serverbundle: GET /user/<id>/group?serverbundle_id=<serverbundle_id> If the game only supports one group per user, select the group with the highest permission level. Of all groups that should be synced, get the corresponding in-game group name(s) from group.mappings.name . Get all group names of mappings that have the same serverbundle id as the current server. There may be multiple mappings per group for the same serverbundle if multigroup is supported. Check all current groups of the player. Remove all groups that the player should not have and add all groups that the player doesn't have yet. It may be required to check which permissions/group system a server uses. Notify the player about the changes. Capture in-game group changes If the group of a player gets changed in game by an admin, this change should also be reflected in VyHub. As this procedure isn't trivial, it can be skipped and done later, as it is not crucial for a successful operation. For this, we need to Fetch all groups GET /group Create a mapping from Game group name -> VyHub Group . How the game group name is retrieved is explained in the Sync groups chapter (use group.mappings ). With this prerequisite, we can not create a function that sets the group of a user. The function should take the player id, group name, length of membership and processor id as parameters. In this function, we create a new membership with the API: POST /user/<id>/membership[?morph_user_id=<processor_id>]; { begin: <current timestamp>, end: <end timestamp>, group_id: ..., serverbundle_id: ...} , where <id> is the id of the user that should become member of the group and <processor_id> the id of the user that initiated the group change. If the processor is unknown, the morph_user_id can be omitted. ! In this case, a permission check must be done on the server ! The group id can be found by looking up the group name parameter in the group mapping that was created in step 2. Listen to group changes on the server (by registering event listeners or intercepting functions) and call the according function. If the group system of the game is capable of multiple groups at once, group membership must also be terminated when the group is removed from the player. There are two ways for this: DELETE /user/<id>/membership?serverbundle_id=<serverbundle_id>[&morph_user_id=<processor_id>] : Terminate all memberships of the user in the serverbundle. Or GET /user/<id>/membership?serverbundle_id=<serverbundle_id> : get all memberships of a user, find the correct one and terminate it with DELETE /user/membership/<membership_id>[?morph_user_id=<processor_id>] . Bans Bans are important for a gameserver. Therefore, the most important functions must always work, even if the API is unreachable. Receive bans and enforce them There should be a function that fetches the ban list from the API. Fetch active bans for the serverbundle: GET /server/bundle/<serverbundle_id>/ban?active=true Save the result for the runtime and in the cache. If the API isn't available on server start, load the bans from the cache. This function should be called on server start ( vyhub_ready ), after player bans/unbans and once a minute. After refreshing the ban list: For all players on the server, check if their unique id is present in the ban list (as a key of the dict). If yes, kick them from the server. There should be a separate function to check if a player is banned, because more possible ways for a player to be counted as banned will be introduced below. Add a hook on player login/connect/auth that checks if the player is on the ban list. If yes, kick the player with the provided ban message. Banning/Unbanning a player There must be a function that adds a ban for a player and a function that unbans the player. To archive this, two queues should be introduced: A queue for bans and a queue for unbans. Every change on one of the queues must be directly written to disk, to prevent data loss. On server start, the last queue state should be read from disk. Ban queue Could be structured like this: ban_queue: Dict[<player_id>,List[Dict[...]]] player_id: str length: int (seconds) reason: str creator_id: str created_on: date status: str This allows a quick lookup, if a player is banned. When creating a ban, it should be written into the ban queue, which is then saved in a file or similar. Another function then processes the bans (regularly) in the ban queue and tries to send them to the API. If 200 (ban created) or 404 (user not found) is returned by the API, the ban can be removed from the queue. Else, the ban remains in the queue and will be retried f.e. every minute. The creator of the ban should be informed about the outcome of the ban procedure. Bans can be issued as follows: POST /ban/[?morph_user_id=<processor_id>]; { user_id: ..., serverbundle_id: ..., length: ..., reason: ..., created_on: ..., status: ... } , where <processor_id> is the id of the user that issued the ban. Omit the morph_user_id parameter if the ban has been issued by the server console. ! In this case, a permission check must be done on the server ! Unban queue The unban queue is very similar to the ban queue, but can be structured less complicated: unban_queue: Dict[<player_id>, <processor_id>] Where <processor_id> is the id of the player that issued the unban. When unbanning a player (id), the status of all bans in the ban queue for this player should be set to UNBANNED . Additionally, an entry in the unban queue should be created. Unbans can be issued as follows and can be removed from the queue afterwards: PATCH /user/<id>/ban[?morph_user_id=<processor_id>] , where <id> is the id of the user that should be unbanned and <processor_id> the id of the user that issued the unban. When no player (but for example the server console) issued the unban, the morph_user_id parameter should be omitted. ! In this case, a permission check must be done on the server ! Commands There should be commands like /ban <user> <length> <reason> and /unban <user> . If these commands already exist, they should be intercepted and the default operation should be suppressed. Warnings Warnings are easier to implement, as they don't need to be cached. Creating warnings There should be a function to create a warning for a player. A warning can be created as follows: POST /warning[?morph_user_id=<processor_id>]; { user_id: ..., serverbundle_id: ..., reason: ... } After creating a warning, the ban list should be refreshed. Commands There should be a command like /warn <user> <reason> . Statistics The online time of players should be counted and written to disk until sent to API. To send the playtime to the API, we need to Get or create the user attribute definition: GET /user/attribute/definition/playtime If the API is not available, use the cached definition. If the API returns a 404, create a new definition: POST /user/attribute/definition; { name: \"playtime\", title: \"Play Time\", unit: \"HOURS\", type: \"ACCUMULATED\", accumulation_interval: \"day\", unspecific: true } Cache this definition Send the playtime to the API. This should happen every 60 minutes and on server start. POST /user/attribute/; { definition_id: ..., user_id: ..., serverbundle_id: ..., value: <playtime in hours> } Reset the playtime counter to 0 after sending the playtime of a player. Rewards WIP Messages and Translations Whenever possible, messages should be sent to the involved players. All messages should be taken from an exchangeable language file.","title":"Guideline for game clients"},{"location":"dev/game_clients/#guideline-for-game-clients","text":"This guide explains how a VyHub game client should be structured. This guide may contain typos and other mistakes, because it is not completely finished yet. Example implementation for Garry's Mod (Lua): https://github.com/matbyte-com/vyhub-gmod","title":"Guideline for game clients"},{"location":"dev/game_clients/#concepts","text":"","title":"Concepts"},{"location":"dev/game_clients/#events","text":"If possible, own events should be introduced and named as follows: vyhub_loading_start : Called when addon is loading. vyhub_loading_finish : Called when addon has finished loading. vyhub_api_ready : API client is ready and API is reachable. vyhub_api_failed : API client is not ready because API is not reachable. vyhub_ready : Server information has been loaded from the API or cache. vyhub_ply_connected : Called when a player connected but is not initialized yet. vyhub_ply_initialized : Called when a player has been successfully initialized (user retrieved from API). For application start it should be: vyhub_loading_start -> vyhub_loading_finish -> vyhub_api_ready / vyhub_api_failed -> vyhub_ready","title":"Events"},{"location":"dev/game_clients/#morph_user_id","text":"Some endpoints (f.e. when creating bans or warnings) support the morph_user_id parameter. If the parameter is set with a user id, the request will be executed as the user which id has been supplied. This has the advantage that permission checks must not be implemented on the client side and allows the server to act on behalf of the user. If the morph_user_id parameter is omitted, a security/permission check must be done on the client before sending the request!","title":"morph_user_id"},{"location":"dev/game_clients/#server","text":"","title":"Server"},{"location":"dev/game_clients/#config","text":"The server needs three values to work: API URL API Key Server ID There should be a config where the admin can insert the values.","title":"Config"},{"location":"dev/game_clients/#startup","text":"When the addon is loaded, the server should request information about itself and its serverbundle: GET /server/<id> , where <id> is the server id from the config. Save this information for the runtime of the server and permanently save it to a cache. If the API server is not available, use the data from the cache if the last successful retrieval is not older than a week. Start the routines/register the event listeners of the following components afterwards.","title":"Startup"},{"location":"dev/game_clients/#status-update","text":"The server should send its current status to the API every minute. Collect data of: Number of current players Number of maximum players Map Send it to the API: PATCH /server/<id>; { users_max: ..., users_current: ..., map: ..., is_alive: true } With a version coming soon, also data about online players should be sent. This can be prepared.","title":"Status update"},{"location":"dev/game_clients/#extra-config","text":"In the extra attribute (dict) of a server, additional config options can be supplied. This can vary by game. For example there could be config parameters for reserved slots.","title":"Extra config"},{"location":"dev/game_clients/#user","text":"","title":"User"},{"location":"dev/game_clients/#registration","text":"Every user playing on a server should be registered, if not already the case. On player connect, check if the user exists: GET /user/<id>?type=<type> , where <id> is the unique identifier of the Player at the authentication source <type> (e.g. the steam id for STEAM ). If not, create user: POST /user/; { identifier: <id>, type: <type> } If the API doesn't return a valid response for the GET request (404 or 200), retry it every minute. On success, save the user object in a dictionary [Player ID] -> [VyHub user object] . If possible, save the id of the VyHub user in the Player object.","title":"Registration"},{"location":"dev/game_clients/#get-user-data","text":"Create a function that returns the VyHub user for a Player ID. The function should only query the API if the user does not exist in the user dictionary.","title":"Get user data"},{"location":"dev/game_clients/#sync-groups","text":"On player connect and every few (5) minutes, the groups of a player should be synced. Get the active groups of a user in the serverbundle: GET /user/<id>/group?serverbundle_id=<serverbundle_id> If the game only supports one group per user, select the group with the highest permission level. Of all groups that should be synced, get the corresponding in-game group name(s) from group.mappings.name . Get all group names of mappings that have the same serverbundle id as the current server. There may be multiple mappings per group for the same serverbundle if multigroup is supported. Check all current groups of the player. Remove all groups that the player should not have and add all groups that the player doesn't have yet. It may be required to check which permissions/group system a server uses. Notify the player about the changes.","title":"Sync groups"},{"location":"dev/game_clients/#capture-in-game-group-changes","text":"If the group of a player gets changed in game by an admin, this change should also be reflected in VyHub. As this procedure isn't trivial, it can be skipped and done later, as it is not crucial for a successful operation. For this, we need to Fetch all groups GET /group Create a mapping from Game group name -> VyHub Group . How the game group name is retrieved is explained in the Sync groups chapter (use group.mappings ). With this prerequisite, we can not create a function that sets the group of a user. The function should take the player id, group name, length of membership and processor id as parameters. In this function, we create a new membership with the API: POST /user/<id>/membership[?morph_user_id=<processor_id>]; { begin: <current timestamp>, end: <end timestamp>, group_id: ..., serverbundle_id: ...} , where <id> is the id of the user that should become member of the group and <processor_id> the id of the user that initiated the group change. If the processor is unknown, the morph_user_id can be omitted. ! In this case, a permission check must be done on the server ! The group id can be found by looking up the group name parameter in the group mapping that was created in step 2. Listen to group changes on the server (by registering event listeners or intercepting functions) and call the according function. If the group system of the game is capable of multiple groups at once, group membership must also be terminated when the group is removed from the player. There are two ways for this: DELETE /user/<id>/membership?serverbundle_id=<serverbundle_id>[&morph_user_id=<processor_id>] : Terminate all memberships of the user in the serverbundle. Or GET /user/<id>/membership?serverbundle_id=<serverbundle_id> : get all memberships of a user, find the correct one and terminate it with DELETE /user/membership/<membership_id>[?morph_user_id=<processor_id>] .","title":"Capture in-game group changes"},{"location":"dev/game_clients/#bans","text":"Bans are important for a gameserver. Therefore, the most important functions must always work, even if the API is unreachable.","title":"Bans"},{"location":"dev/game_clients/#receive-bans-and-enforce-them","text":"There should be a function that fetches the ban list from the API. Fetch active bans for the serverbundle: GET /server/bundle/<serverbundle_id>/ban?active=true Save the result for the runtime and in the cache. If the API isn't available on server start, load the bans from the cache. This function should be called on server start ( vyhub_ready ), after player bans/unbans and once a minute. After refreshing the ban list: For all players on the server, check if their unique id is present in the ban list (as a key of the dict). If yes, kick them from the server. There should be a separate function to check if a player is banned, because more possible ways for a player to be counted as banned will be introduced below. Add a hook on player login/connect/auth that checks if the player is on the ban list. If yes, kick the player with the provided ban message.","title":"Receive bans and enforce them"},{"location":"dev/game_clients/#banningunbanning-a-player","text":"There must be a function that adds a ban for a player and a function that unbans the player. To archive this, two queues should be introduced: A queue for bans and a queue for unbans. Every change on one of the queues must be directly written to disk, to prevent data loss. On server start, the last queue state should be read from disk.","title":"Banning/Unbanning a player"},{"location":"dev/game_clients/#ban-queue","text":"Could be structured like this: ban_queue: Dict[<player_id>,List[Dict[...]]] player_id: str length: int (seconds) reason: str creator_id: str created_on: date status: str This allows a quick lookup, if a player is banned. When creating a ban, it should be written into the ban queue, which is then saved in a file or similar. Another function then processes the bans (regularly) in the ban queue and tries to send them to the API. If 200 (ban created) or 404 (user not found) is returned by the API, the ban can be removed from the queue. Else, the ban remains in the queue and will be retried f.e. every minute. The creator of the ban should be informed about the outcome of the ban procedure. Bans can be issued as follows: POST /ban/[?morph_user_id=<processor_id>]; { user_id: ..., serverbundle_id: ..., length: ..., reason: ..., created_on: ..., status: ... } , where <processor_id> is the id of the user that issued the ban. Omit the morph_user_id parameter if the ban has been issued by the server console. ! In this case, a permission check must be done on the server !","title":"Ban queue"},{"location":"dev/game_clients/#unban-queue","text":"The unban queue is very similar to the ban queue, but can be structured less complicated: unban_queue: Dict[<player_id>, <processor_id>] Where <processor_id> is the id of the player that issued the unban. When unbanning a player (id), the status of all bans in the ban queue for this player should be set to UNBANNED . Additionally, an entry in the unban queue should be created. Unbans can be issued as follows and can be removed from the queue afterwards: PATCH /user/<id>/ban[?morph_user_id=<processor_id>] , where <id> is the id of the user that should be unbanned and <processor_id> the id of the user that issued the unban. When no player (but for example the server console) issued the unban, the morph_user_id parameter should be omitted. ! In this case, a permission check must be done on the server !","title":"Unban queue"},{"location":"dev/game_clients/#commands","text":"There should be commands like /ban <user> <length> <reason> and /unban <user> . If these commands already exist, they should be intercepted and the default operation should be suppressed.","title":"Commands"},{"location":"dev/game_clients/#warnings","text":"Warnings are easier to implement, as they don't need to be cached.","title":"Warnings"},{"location":"dev/game_clients/#creating-warnings","text":"There should be a function to create a warning for a player. A warning can be created as follows: POST /warning[?morph_user_id=<processor_id>]; { user_id: ..., serverbundle_id: ..., reason: ... } After creating a warning, the ban list should be refreshed.","title":"Creating warnings"},{"location":"dev/game_clients/#commands_1","text":"There should be a command like /warn <user> <reason> .","title":"Commands"},{"location":"dev/game_clients/#statistics","text":"The online time of players should be counted and written to disk until sent to API. To send the playtime to the API, we need to Get or create the user attribute definition: GET /user/attribute/definition/playtime If the API is not available, use the cached definition. If the API returns a 404, create a new definition: POST /user/attribute/definition; { name: \"playtime\", title: \"Play Time\", unit: \"HOURS\", type: \"ACCUMULATED\", accumulation_interval: \"day\", unspecific: true } Cache this definition Send the playtime to the API. This should happen every 60 minutes and on server start. POST /user/attribute/; { definition_id: ..., user_id: ..., serverbundle_id: ..., value: <playtime in hours> } Reset the playtime counter to 0 after sending the playtime of a player.","title":"Statistics"},{"location":"dev/game_clients/#rewards","text":"WIP","title":"Rewards"},{"location":"dev/game_clients/#messages-and-translations","text":"Whenever possible, messages should be sent to the involved players. All messages should be taken from an exchangeable language file.","title":"Messages and Translations"},{"location":"game/discord/","text":"Discord Integration Read this guide first to enable Discord authorization. Setup In VyHub open the add server dialog in the Server settings. Get your guild_id and enter it as the servers address In Discord, open the server settings, go to Widget and copy the guild id Click the Add Bot to Guild link. If the link is not visible, create an application first Format of link: https://discord.com/api/oauth2/authorize?client_id={discord_application_id}&permissions=268438529&scope=bot Make sure the bot has the ability to change roles. In Discord, open the server settings. Go to Roles and drag and drop VyHub Bot above groups you want to have synced. For higher security do not allow the bot to sync admin groups. Group Sync User groups are automatically synced. VyHub group names can be mapped to in-game groups at the Advanced Properties tab in the group settings. Please pay attention to capitalization. Troubleshooting Problem: Roles are not synced with Discord. Solution: Make sure roles have the exact name as provided to VyHub (Capitalization / Whitespaces...) and that the VyHub role has higher permissions than other roles.","title":"Discord Integration"},{"location":"game/discord/#discord-integration","text":"Read this guide first to enable Discord authorization.","title":"Discord Integration"},{"location":"game/discord/#setup","text":"In VyHub open the add server dialog in the Server settings. Get your guild_id and enter it as the servers address In Discord, open the server settings, go to Widget and copy the guild id Click the Add Bot to Guild link. If the link is not visible, create an application first Format of link: https://discord.com/api/oauth2/authorize?client_id={discord_application_id}&permissions=268438529&scope=bot Make sure the bot has the ability to change roles. In Discord, open the server settings. Go to Roles and drag and drop VyHub Bot above groups you want to have synced. For higher security do not allow the bot to sync admin groups.","title":"Setup"},{"location":"game/discord/#group-sync","text":"User groups are automatically synced. VyHub group names can be mapped to in-game groups at the Advanced Properties tab in the group settings. Please pay attention to capitalization.","title":"Group Sync"},{"location":"game/discord/#troubleshooting","text":"Problem: Roles are not synced with Discord. Solution: Make sure roles have the exact name as provided to VyHub (Capitalization / Whitespaces...) and that the VyHub role has higher permissions than other roles.","title":"Troubleshooting"},{"location":"game/gmod/","text":"Garry's Mod Integration Download Link: https://github.com/matbyte-com/vyhub-gmod/releases Compatible Admin Mods xAdmin (1/2) ULX ServerGuard SAM FAdmin Maybe more Installation Clone the repo into your addons/ folder. Alternatively, download the ZIP archive from GitHub. Rename lua/vyhub/config/sv_config.lua.example to sv_config.lua Edit lua/vyhub/config/sv_config.lua : Set VyHub.Config.api_url to your API URL. You can find the URL at the instance details on https://vyhub.net . Set VyHub.Config.api_key to the serverbundle API key you can get at Admin -> Settings -> Servers -> Serverbundle . Set VyHub.Config.server_id to the ID of the gamserver this addon is installed. It can also be found at Admin -> Settings -> Servers . Group Sync User groups are automatically synced. For this to work correctly, the serverbundle must be in multigoup: disabled mode. VyHub group names can be mapped to in-game groups at the Advanced Properties tab in the group settings. Troubleshooting Broken Bans/Unbans Problem: Every few seconds the server tries to send a ban to VyHub, but the ban data is malformed, which causes the request to never succeed. Solution: Delete the file data/vyhub/ban_queue.json .","title":"Garry's Mod Integration"},{"location":"game/gmod/#garrys-mod-integration","text":"Download Link: https://github.com/matbyte-com/vyhub-gmod/releases","title":"Garry's Mod Integration"},{"location":"game/gmod/#compatible-admin-mods","text":"xAdmin (1/2) ULX ServerGuard SAM FAdmin Maybe more","title":"Compatible Admin Mods"},{"location":"game/gmod/#installation","text":"Clone the repo into your addons/ folder. Alternatively, download the ZIP archive from GitHub. Rename lua/vyhub/config/sv_config.lua.example to sv_config.lua Edit lua/vyhub/config/sv_config.lua : Set VyHub.Config.api_url to your API URL. You can find the URL at the instance details on https://vyhub.net . Set VyHub.Config.api_key to the serverbundle API key you can get at Admin -> Settings -> Servers -> Serverbundle . Set VyHub.Config.server_id to the ID of the gamserver this addon is installed. It can also be found at Admin -> Settings -> Servers .","title":"Installation"},{"location":"game/gmod/#group-sync","text":"User groups are automatically synced. For this to work correctly, the serverbundle must be in multigoup: disabled mode. VyHub group names can be mapped to in-game groups at the Advanced Properties tab in the group settings.","title":"Group Sync"},{"location":"game/gmod/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"game/gmod/#broken-bansunbans","text":"Problem: Every few seconds the server tries to send a ban to VyHub, but the ban data is malformed, which causes the request to never succeed. Solution: Delete the file data/vyhub/ban_queue.json .","title":"Broken Bans/Unbans"},{"location":"guide/api/","text":"API Your VyHub instance comes with a fully fletched rest api. The api is accessible under https://api.vyhub.app/{instance_name}/v1 Documentation and Swagger UI You can view the documentation and interact with the api through the Swagger UI which is accessible under https://api.vyhub.app/{instance_name}/v1/docs Authorization Some endpoints need authorization. You can set your authorization key at the top right of the documentation. For testing purposes you can use the authorization key you get, after you logged into your instance. Open the developer options in your browser and inspect the headers of a request in the network tab.","title":"API"},{"location":"guide/api/#api","text":"Your VyHub instance comes with a fully fletched rest api. The api is accessible under https://api.vyhub.app/{instance_name}/v1","title":"API"},{"location":"guide/api/#documentation-and-swagger-ui","text":"You can view the documentation and interact with the api through the Swagger UI which is accessible under https://api.vyhub.app/{instance_name}/v1/docs","title":"Documentation and Swagger UI"},{"location":"guide/api/#authorization","text":"Some endpoints need authorization. You can set your authorization key at the top right of the documentation. For testing purposes you can use the authorization key you get, after you logged into your instance. Open the developer options in your browser and inspect the headers of a request in the network tab.","title":"Authorization"},{"location":"guide/authorization/","text":"Authorization You can log in using different services. Central Connect your account with VyHub Central to have another way of logging in or the ability of creating your own instances. Steam Connect your account with Steam when playing Garry's Mod. Discord Connect your account with Discord to enjoy the synchronization of groups between Discord and VyHub. Setup In your VyHub instance go to the Authorization settings and enable Discord. Go to the Discord Developer Portal and create a new application. Get your client_id and client_secret . Enter the redirect URL shown in the Authorization settings. Get your bot_token and enable the presence and members intent. Read this guide to add the Discord bot to your Discord guild.","title":"Authorization"},{"location":"guide/authorization/#authorization","text":"You can log in using different services.","title":"Authorization"},{"location":"guide/authorization/#central","text":"Connect your account with VyHub Central to have another way of logging in or the ability of creating your own instances.","title":"Central"},{"location":"guide/authorization/#steam","text":"Connect your account with Steam when playing Garry's Mod.","title":"Steam"},{"location":"guide/authorization/#discord","text":"Connect your account with Discord to enjoy the synchronization of groups between Discord and VyHub.","title":"Discord"},{"location":"guide/authorization/#setup","text":"In your VyHub instance go to the Authorization settings and enable Discord. Go to the Discord Developer Portal and create a new application. Get your client_id and client_secret . Enter the redirect URL shown in the Authorization settings. Get your bot_token and enable the presence and members intent. Read this guide to add the Discord bot to your Discord guild.","title":"Setup"},{"location":"guide/ban/","text":"Bans Bans are targeting a user in one specific serverbundle . Bans across all serverbundles are also possible, by leaving the serverbundle field blank. Attributes Attribute Description User Targeted user Reason Reason for the ban Length Length of the ban (empty for lifetime ban) Serverbundle Serverbundle the ban is targeting (empty for global ban) Add / Edit Bans can be added and edited through the designated Bans page.","title":"Bans"},{"location":"guide/ban/#bans","text":"Bans are targeting a user in one specific serverbundle . Bans across all serverbundles are also possible, by leaving the serverbundle field blank.","title":"Bans"},{"location":"guide/ban/#attributes","text":"Attribute Description User Targeted user Reason Reason for the ban Length Length of the ban (empty for lifetime ban) Serverbundle Serverbundle the ban is targeting (empty for global ban)","title":"Attributes"},{"location":"guide/ban/#add-edit","text":"Bans can be added and edited through the designated Bans page.","title":"Add / Edit"},{"location":"guide/customizability/","text":"Themes and customizability VyHub can be customized in various aspects. Theme Attributes Attribute Description Primary / Success / Warning / Error Color Color theme Darkmode Switch to dark color theme Background Image Background image (leave empty if color is preferred) Background Color Background color (is replaced by background image, if set) Logo Image Image of logo displayed in top left corner (leave empty if no logo is wanted) Logo Width Width of logo Show community name Toggle visibility of community name in top left corner Custom navigation links and websites You can add custom navigation links to external websites or write your own html. Find more information in the navigation section.","title":"Themes and customizability"},{"location":"guide/customizability/#themes-and-customizability","text":"VyHub can be customized in various aspects.","title":"Themes and customizability"},{"location":"guide/customizability/#theme","text":"","title":"Theme"},{"location":"guide/customizability/#attributes","text":"Attribute Description Primary / Success / Warning / Error Color Color theme Darkmode Switch to dark color theme Background Image Background image (leave empty if color is preferred) Background Color Background color (is replaced by background image, if set) Logo Image Image of logo displayed in top left corner (leave empty if no logo is wanted) Logo Width Width of logo Show community name Toggle visibility of community name in top left corner","title":"Attributes"},{"location":"guide/customizability/#custom-navigation-links-and-websites","text":"You can add custom navigation links to external websites or write your own html. Find more information in the navigation section.","title":"Custom navigation links and websites"},{"location":"guide/group/","text":"Groups Attributes Attribute Description Name Name of group Permission Level Used to determine the ability to target other users Serverbundle Serverbundle of group Color Display color of group on VyHub and gameservers Properties Rightmanagement and access control for functionalities Advanced Properties Membership A group is assigned to a serverbundle . Attributes Attribute Description Begin Begin of membership End End of membership (empty if unlimited) Serverbundle Serverbundle of membership Group Group on which the membership is applied Add Memberships can be added by clicking on the add button on the user dashboard in the group section. Edit Memberships can be edited by clicking on the edit button on the user dashboard in the group section. All memberships belonging to a group can also be found in the group settings panel.","title":"Groups"},{"location":"guide/group/#groups","text":"","title":"Groups"},{"location":"guide/group/#attributes","text":"Attribute Description Name Name of group Permission Level Used to determine the ability to target other users Serverbundle Serverbundle of group Color Display color of group on VyHub and gameservers Properties Rightmanagement and access control for functionalities Advanced Properties","title":"Attributes"},{"location":"guide/group/#membership","text":"A group is assigned to a serverbundle .","title":"Membership"},{"location":"guide/group/#attributes_1","text":"Attribute Description Begin Begin of membership End End of membership (empty if unlimited) Serverbundle Serverbundle of membership Group Group on which the membership is applied","title":"Attributes"},{"location":"guide/group/#add","text":"Memberships can be added by clicking on the add button on the user dashboard in the group section.","title":"Add"},{"location":"guide/group/#edit","text":"Memberships can be edited by clicking on the edit button on the user dashboard in the group section. All memberships belonging to a group can also be found in the group settings panel.","title":"Edit"},{"location":"guide/legal/","text":"Legal You are obliged to follow the local laws. In the European Union it is at least necessary to have terms of use and a privacy policy. Example privacy policy We provide you with an example privacy policy. We assume no liability for any damage that may arise when using the data protection declaration Privacy Data access and hosting You can visit our website without giving any personal information. Each time a website is called up, the web server only automatically saves a so-called server log file, which contains, for example, the name of the requested file, your IP address, the date and time of the call, the amount of data transferred and the requesting provider (access data) and documents the call. VyHub This website is hosted by VyHub . The provider is Matbyte UG, Zum Kap 19, 04442 Zwenkau (hereinafter: VyHub). Details can be found in VyHub's data protection declaration Data collection and use for contract processing We collect personal data if you provide it to us as part of your order or when you contact us (e.g. using the contact form or email). Mandatory fields are marked as such, because in these cases we need the data to process the contract or to process your contact and you cannot complete the order or send the contact without specifying them. Which data is collected can be seen from the respective input forms. We use the data you provide in accordance with Art. 6 Para. 1 Payments During a payment process, we might pass your billing information such as IP and email address to payment providers like Stripe, Paypal or Paysafecard. These payment providers will take care of secure payment processing on our behalf. Storage period Unless a more specific storage period has been specified within this privacy policy, your personal data will remain with us until the purpose for the data processing ceases to apply. If you assert a legitimate request for deletion or revoke consent for data processing, your data will be deleted, unless we have other legally permissible reasons for storing your personal data (e.g. retention periods under tax law or commercial law); in the the latter case, the deletion will take place after these reasons have ceased to exist. Registration You need to register with us to use our products. We save your personal login details (e.g. email, password) within the registration process. SSL or TLS encryption This site uses SSL or TLS encryption to protect the transmission of confidential content, such as login data, order or payment information. If the SSL or TLS encryption is activated, the data that you transmit to us cannot read by third parties Contact and your Rights As a data subject, you have the following rights: In accordance with Art. 15 GDPR, you have the right to request information about your personal data processed by us to the extent specified therein. In accordance with Art. 16 GDPR, you have the right to immediately request the correction of incorrect personal data or the completion of your personal data stored by us. In accordance with Art. 17 GDPR, you have the right to request the deletion of your personal data stored by us, unless further processing In accordance with Art. 18 GDPR, you have the right to request the restriction of the processing of your personal data. For this purpose you can contact us at any time. In accordance with Art. 20 GDPR, you have the right for data portability. You have the right to have the data processed by us handed over to you or a third party in a common machine-readable format. If you request the direct transfer of the data to another person responsible this will only take place insofar as it is technically feasible. For consent or objection to a specific use of data, please contact us directly using the contact details in our imprint.","title":"Legal"},{"location":"guide/legal/#legal","text":"You are obliged to follow the local laws. In the European Union it is at least necessary to have terms of use and a privacy policy.","title":"Legal"},{"location":"guide/legal/#example-privacy-policy","text":"We provide you with an example privacy policy. We assume no liability for any damage that may arise when using the data protection declaration","title":"Example privacy policy"},{"location":"guide/navigation/","text":"Navigation Attributes Attribute Description Title Title of navigation link Enabled Affects the visibility of navigation link Icon Icon prepended to title Type Type of navigation link (external link / html content) URL (external link only) URL to other website Content (html content only) Content of the page Enable / Disable Navigation Navigation Links can be enabled / disabled by pressing the edit button. Set the checkbox enabled and confirm. Custom Links External pages can easily be linked by adding a new navigation link with the type of external link . Custom Pages Custom pages can be created by adding a new navigation link with the type of HTML content . JavaScript and other dangerous HTML tags are escaped and not rendered, unless edited by an admin Update Order of Navigation Links Drag and drop the navigation links in the order you want them to be in. Confirm with pressing the update nav order button.","title":"Navigation"},{"location":"guide/navigation/#navigation","text":"","title":"Navigation"},{"location":"guide/navigation/#attributes","text":"Attribute Description Title Title of navigation link Enabled Affects the visibility of navigation link Icon Icon prepended to title Type Type of navigation link (external link / html content) URL (external link only) URL to other website Content (html content only) Content of the page","title":"Attributes"},{"location":"guide/navigation/#enable-disable-navigation","text":"Navigation Links can be enabled / disabled by pressing the edit button. Set the checkbox enabled and confirm.","title":"Enable / Disable Navigation"},{"location":"guide/navigation/#custom-links","text":"External pages can easily be linked by adding a new navigation link with the type of external link .","title":"Custom Links"},{"location":"guide/navigation/#custom-pages","text":"Custom pages can be created by adding a new navigation link with the type of HTML content . JavaScript and other dangerous HTML tags are escaped and not rendered, unless edited by an admin","title":"Custom Pages"},{"location":"guide/navigation/#update-order-of-navigation-links","text":"Drag and drop the navigation links in the order you want them to be in. Confirm with pressing the update nav order button.","title":"Update Order of Navigation Links"},{"location":"guide/property/","text":"Properties The property system is responsible for managing access permissions and more. Every group has a set of properties that are applied to a user if the user is a member in the group. Some component (like warnings, bans) will also check if the user has the required property in a specific bundle. Example: A user needs the ban_show property to see bans for a bundle. The user can only see the bans of the bundles, where it has the property applied (by a group membership). For most functions, it is enough to have the required property in only one serverbundle. Additionally, properties can also have a value. For example the server_group property of a group specifies the in-game group associated to it. Additional infos for developers The features below are not yet implemented in the web UI and may be overwritten when editing a group via the web UI. You can add custom properties via the API if you want. There is also an advanced feature which allows to add negative ( granted set to false ) properties. A negative property from one group overwrites a positive property from an other group and results in the user not having the property.","title":"Properties"},{"location":"guide/property/#properties","text":"The property system is responsible for managing access permissions and more. Every group has a set of properties that are applied to a user if the user is a member in the group. Some component (like warnings, bans) will also check if the user has the required property in a specific bundle. Example: A user needs the ban_show property to see bans for a bundle. The user can only see the bans of the bundles, where it has the property applied (by a group membership). For most functions, it is enough to have the required property in only one serverbundle. Additionally, properties can also have a value. For example the server_group property of a group specifies the in-game group associated to it.","title":"Properties"},{"location":"guide/property/#additional-infos-for-developers","text":"The features below are not yet implemented in the web UI and may be overwritten when editing a group via the web UI. You can add custom properties via the API if you want. There is also an advanced feature which allows to add negative ( granted set to false ) properties. A negative property from one group overwrites a positive property from an other group and results in the user not having the property.","title":"Additional infos for developers"},{"location":"guide/server/","text":"Server Attributes Attribute Description Name Name of server Address Server address Port Port on which the service is running on Type Type of server Reserved Slots Number of reserved slots Serverbundle Serverbundle the server is assigned to Connect a new Gameserver Navigate to the Server settings. Press the Add Server button and follow the steps in the dialog. After you have added the server in your VyHub instance you need to install our plugin on your server. Garry's Mod Discord","title":"Server"},{"location":"guide/server/#server","text":"","title":"Server"},{"location":"guide/server/#attributes","text":"Attribute Description Name Name of server Address Server address Port Port on which the service is running on Type Type of server Reserved Slots Number of reserved slots Serverbundle Serverbundle the server is assigned to","title":"Attributes"},{"location":"guide/server/#connect-a-new-gameserver","text":"Navigate to the Server settings. Press the Add Server button and follow the steps in the dialog. After you have added the server in your VyHub instance you need to install our plugin on your server. Garry's Mod Discord","title":"Connect a new Gameserver"},{"location":"guide/serverbundle/","text":"Serverbundle Servers are organised within serverbundles. Attributes Attribute Description Name Name of serverbundle Multiple Groups If enabled, a user can be member in multiple groups simultaneously Color Color of serverbundle Icon Icon displayed to identify serverbundle throughout VyHub Type Type of the serverbundle (applies to servers within the bundle) Default Group Default group every user has by default in the serverbundle. Servers within the same serverbundle are from the same type (e.g. GMOD). Serverbundles are an abstraction from servers . Other features of VyHub like Bans / Warnings and the Shop are using serverbundles. Create a Serverbundle Navigate to the Server settings. Press the Add Serverbundle button and follow the steps in the dialog.","title":"Serverbundle"},{"location":"guide/serverbundle/#serverbundle","text":"Servers are organised within serverbundles.","title":"Serverbundle"},{"location":"guide/serverbundle/#attributes","text":"Attribute Description Name Name of serverbundle Multiple Groups If enabled, a user can be member in multiple groups simultaneously Color Color of serverbundle Icon Icon displayed to identify serverbundle throughout VyHub Type Type of the serverbundle (applies to servers within the bundle) Default Group Default group every user has by default in the serverbundle. Servers within the same serverbundle are from the same type (e.g. GMOD). Serverbundles are an abstraction from servers . Other features of VyHub like Bans / Warnings and the Shop are using serverbundles.","title":"Attributes"},{"location":"guide/serverbundle/#create-a-serverbundle","text":"Navigate to the Server settings. Press the Add Serverbundle button and follow the steps in the dialog.","title":"Create a Serverbundle"},{"location":"guide/warning/","text":"Warnings Attributes Attribute Description User Targeted user Reason Reason for the warning Serverbundle Serverbundle the warning is targeting Add / Edit Warnings can be added and edited through the designated warning page. Warning Settings You can find further warning configurations in the settings. Attribute Description Warning Time To Live How many days a warning is considered as active Number of warning till automatic bans How many active warnings it requires for a user to get banned (0 to disable) Length of automatic ban How long (minutes) a user will be banned if the warning threshold has been reached","title":"Warnings"},{"location":"guide/warning/#warnings","text":"","title":"Warnings"},{"location":"guide/warning/#attributes","text":"Attribute Description User Targeted user Reason Reason for the warning Serverbundle Serverbundle the warning is targeting","title":"Attributes"},{"location":"guide/warning/#add-edit","text":"Warnings can be added and edited through the designated warning page.","title":"Add / Edit"},{"location":"guide/warning/#warning-settings","text":"You can find further warning configurations in the settings. Attribute Description Warning Time To Live How many days a warning is considered as active Number of warning till automatic bans How many active warnings it requires for a user to get banned (0 to disable) Length of automatic ban How long (minutes) a user will be banned if the warning threshold has been reached","title":"Warning Settings"},{"location":"guide/import/general/","text":"Import from other systems VyHub allows to import data from other management/ban/warning/etc. systems. Currently importing data from the following systems is possible: GExtension","title":"Import from other systems"},{"location":"guide/import/general/#import-from-other-systems","text":"VyHub allows to import data from other management/ban/warning/etc. systems. Currently importing data from the following systems is possible: GExtension","title":"Import from other systems"},{"location":"guide/import/gextension/","text":"GExtension Import To use this function, GExtension version 2.7.8 or higher is required! Preparing GExtension Make sure that access to the api (at /api.php ) is possible. Disable security measurements, like the Cloudflare \"under attack\" mode or similar. The API must be available without solving a captcha or additional redirect. For Cloudflare, you can disable this at Firewall -> DDoS -> HTTP DDoS attack protection -> Configure -> Ruleset sensitivity -> Essentially off . Make sure to enable it again, after the import has been finished. If you want a cleaner VyHub database, you can use the Cleanup feature in the Update section of GExtension. Everything except the user deletion is safe to use. If you trigger the user deletion, depending objects (like bans, warnings, packets) will not be imported for the deleted users. Preparing VyHub Do not create any groups or serverbundles, they will be created during the import process. Create all packets, but no rewards yet. Importing the data Only admins can do this. In the VyHub settings, navigate to Import and select the GExtension tab, if not already the case. We will need to do the import process in four steps : Import groups, serverbundles and users Import user statistics, bans and warnings Create rewards for the now available serverbundles and assign them to your packets Import applied packets 1. Basic Data Attribute Description GExtension URL The URL to your GExtension website, without index.php or similar. It should end with a / . API Key The API key from your GExtension settings. 2. Groups, Serverbundles, Users The progress bars show the ratios between the received and the actual imported objects. There are several good reasons why not all objects get imported. You do not have to worry if a progress bar does not reach 100%. In this step, the actual import process is started. Important: Start the process in the following order: Groups Serverbundles Users It is no problem to resume the import process at a later point of time. As long as the API url is the same, the same object will not be imported twice, even if the import process is started twice for the same object. 3. Further Data Repeat the previous step with the remaining objects. In this step, there is no fixed order. 4. Packets If the list of GExtension packets in the packet translation dialog is empty, check your API URL and key. Attribute Description Excluded Rewards A list of rewards that should not be applied to imported user packets. This can be used to not execute one-time rewards (like in-game cash or similar) again. Packet Translations A list of translations from a GExtension packet to a VyHub packet. All packets that GExtension users have, will be translated to the corresponding VyHub packet that has been selected. Create a translation for every packet you want to import. After filling in the required information, the import process for the applied packets can be started. Checking the result Check if all data has been imported to VyHub. If you encounter any problems during the import process, contact our support. You can repeat the process to import additional packets or other data that came up since the last import. Make sure to always use the same API URL, otherwise duplicates may occur.","title":"GExtension Import"},{"location":"guide/import/gextension/#gextension-import","text":"To use this function, GExtension version 2.7.8 or higher is required!","title":"GExtension Import"},{"location":"guide/import/gextension/#preparing-gextension","text":"Make sure that access to the api (at /api.php ) is possible. Disable security measurements, like the Cloudflare \"under attack\" mode or similar. The API must be available without solving a captcha or additional redirect. For Cloudflare, you can disable this at Firewall -> DDoS -> HTTP DDoS attack protection -> Configure -> Ruleset sensitivity -> Essentially off . Make sure to enable it again, after the import has been finished. If you want a cleaner VyHub database, you can use the Cleanup feature in the Update section of GExtension. Everything except the user deletion is safe to use. If you trigger the user deletion, depending objects (like bans, warnings, packets) will not be imported for the deleted users.","title":"Preparing GExtension"},{"location":"guide/import/gextension/#preparing-vyhub","text":"Do not create any groups or serverbundles, they will be created during the import process. Create all packets, but no rewards yet.","title":"Preparing VyHub"},{"location":"guide/import/gextension/#importing-the-data","text":"Only admins can do this. In the VyHub settings, navigate to Import and select the GExtension tab, if not already the case. We will need to do the import process in four steps : Import groups, serverbundles and users Import user statistics, bans and warnings Create rewards for the now available serverbundles and assign them to your packets Import applied packets","title":"Importing the data"},{"location":"guide/import/gextension/#1-basic-data","text":"Attribute Description GExtension URL The URL to your GExtension website, without index.php or similar. It should end with a / . API Key The API key from your GExtension settings.","title":"1. Basic Data"},{"location":"guide/import/gextension/#2-groups-serverbundles-users","text":"The progress bars show the ratios between the received and the actual imported objects. There are several good reasons why not all objects get imported. You do not have to worry if a progress bar does not reach 100%. In this step, the actual import process is started. Important: Start the process in the following order: Groups Serverbundles Users It is no problem to resume the import process at a later point of time. As long as the API url is the same, the same object will not be imported twice, even if the import process is started twice for the same object.","title":"2. Groups, Serverbundles, Users"},{"location":"guide/import/gextension/#3-further-data","text":"Repeat the previous step with the remaining objects. In this step, there is no fixed order.","title":"3. Further Data"},{"location":"guide/import/gextension/#4-packets","text":"If the list of GExtension packets in the packet translation dialog is empty, check your API URL and key. Attribute Description Excluded Rewards A list of rewards that should not be applied to imported user packets. This can be used to not execute one-time rewards (like in-game cash or similar) again. Packet Translations A list of translations from a GExtension packet to a VyHub packet. All packets that GExtension users have, will be translated to the corresponding VyHub packet that has been selected. Create a translation for every packet you want to import. After filling in the required information, the import process for the applied packets can be started.","title":"4. Packets"},{"location":"guide/import/gextension/#checking-the-result","text":"Check if all data has been imported to VyHub. If you encounter any problems during the import process, contact our support. You can repeat the process to import additional packets or other data that came up since the last import. Make sure to always use the same API URL, otherwise duplicates may occur.","title":"Checking the result"},{"location":"guide/shop/general/","text":"General Settings Attribute Description Enable Donation Goal Display donation goal (displayed on startpage - \"News\") Donation Goal Actual value for the donation goal Purchases from countries without tax rule If enabled, purchases from countries where you did not define a tax rule are possible Invoice Logo URL URL to a logo image that is shown on the invoice Checkout Checkboxes Checkboxes which have to be agreed to during checkout Business Address Address of server owner / business (is displayed on invoice)","title":"General Settings"},{"location":"guide/shop/general/#general-settings","text":"Attribute Description Enable Donation Goal Display donation goal (displayed on startpage - \"News\") Donation Goal Actual value for the donation goal Purchases from countries without tax rule If enabled, purchases from countries where you did not define a tax rule are possible Invoice Logo URL URL to a logo image that is shown on the invoice Checkout Checkboxes Checkboxes which have to be agreed to during checkout Business Address Address of server owner / business (is displayed on invoice)","title":"General Settings"},{"location":"guide/shop/packet/","text":"Packets A packet needs to be assigned to a category. Attribute Description Title Title of packet Subtitle Subtitle of packet Category Category the packet is assigned to Enable If disabled, packet can not be bought and all bought packets become inactive Abstract Bullet points to describe the packet Description Packet description Image Url Image shown in the shop Active for The time the rewards are active for (Recurring payments possible) Buyable If disabled, packet can not be bought anymore Buyable active state If disabled, packet can not be purchased if the user already has this packet active Buyable inactive state If disabled, packet can not be purchased if the user already has this packet, but inactive Packet Categories Attribute Description Name Name of category Image URL Image shown in the shop Enabled Enable the category Packet Relations This setting allows to create relations between packets Example: - Packet A is needed to buy Packet B - Packet A disables Packet B - Packet A can not be bought when Packet B is active Payment Attribute Description Price Price of packet Currency Your currency Credits If you want to accept credits (leave empty if not) Custom Price / Pay what you want (Not supported yet) The user can decide how much he is going to pay Recurring Recurring payments every time the active for duration is expired - this limits the choice of payment gateways to these that support it. Currently only Stripe .","title":"Packets"},{"location":"guide/shop/packet/#packets","text":"A packet needs to be assigned to a category. Attribute Description Title Title of packet Subtitle Subtitle of packet Category Category the packet is assigned to Enable If disabled, packet can not be bought and all bought packets become inactive Abstract Bullet points to describe the packet Description Packet description Image Url Image shown in the shop Active for The time the rewards are active for (Recurring payments possible) Buyable If disabled, packet can not be bought anymore Buyable active state If disabled, packet can not be purchased if the user already has this packet active Buyable inactive state If disabled, packet can not be purchased if the user already has this packet, but inactive","title":"Packets"},{"location":"guide/shop/packet/#packet-categories","text":"Attribute Description Name Name of category Image URL Image shown in the shop Enabled Enable the category","title":"Packet Categories"},{"location":"guide/shop/packet/#packet-relations","text":"This setting allows to create relations between packets Example: - Packet A is needed to buy Packet B - Packet A disables Packet B - Packet A can not be bought when Packet B is active","title":"Packet Relations"},{"location":"guide/shop/packet/#payment","text":"Attribute Description Price Price of packet Currency Your currency Credits If you want to accept credits (leave empty if not) Custom Price / Pay what you want (Not supported yet) The user can decide how much he is going to pay Recurring Recurring payments every time the active for duration is expired - this limits the choice of payment gateways to these that support it. Currently only Stripe .","title":"Payment"},{"location":"guide/shop/payment_gateway/","text":"Payment Gateways You need to create a payment gateway to accept payments. Attribute Description Name Name of gateway Subtitle Subtitle shown during checkout Enabled Enable the payment gateway Environment Environment of gateway (Sandbox / Production) Secrets Secrets provided by payment providers Please follow the instructions below to add a payment gateway. PayPal If you want to test the payments with a sandbox account first, do the steps below, but with a SANDBOX application. Create a PayPal Business account or upgrade your account to a business account. Create a REST API app in the PayPal Developer settings. Make sure to create the app for the Live environment. Under LIVE APP SETTINGS , disable the Payouts feature and click Save . In your VyHub instance, create a PayPal payment gateway, select PRODUCTION environment and insert your Client ID and Client Secret . Click Create . Stripe If you want to test the payments with a test account first, do the steps below, but with a TEST application. Create a Stripe account or log into your existing one. In the Stripe Developers settings, navigate to API keys . In your VyHub instance, create a Stripe payment gateway, insert your Public Key and Private Key and select your desired Payment Methods . Click save and edit the payment gateway again. At the bottom, copy the Webhook URL to your clipboard. Back at the Stripe Developers settings, navigate to Webhooks . Click Add (hosted) endpoint , insert the copied URL to Endpoint URL and select Latest API version . Add the following events and click Add endpoint : checkout.session.completed invoice.paid customer.subscription.deleted Click Reveal on the Signing Secret and copy it to your clipboard. Back at the VyHub settings of your Stripe gateway, insert the copied secret into the Webhook Secret field and click Edit . (Optional) In the Stripe settings of the created webhook endpoint, click Send test event to test if everything works fine. Paysafecard Become a paysafecard partner . In your VyHub instance, create a Paysafecard payment gateway, insert your Secret Key and select your desired Environment . Click Create . Credits In your VyHub instance, create a credits payment gateway. Create packets that have Credits as reward, so that users can buy credits with real money. You will need an other payment gateway for this. Coupons Coupon gateways can be used to manually approve coupons (e.g. paysafecard pins) In your VyHub instance, create a coupon payment gateway. After a purchase is made and coupons are entered by the user, the coupons need to be approved under the confirm purchases tab on the shop admin page.","title":"Payment Gateways"},{"location":"guide/shop/payment_gateway/#payment-gateways","text":"You need to create a payment gateway to accept payments. Attribute Description Name Name of gateway Subtitle Subtitle shown during checkout Enabled Enable the payment gateway Environment Environment of gateway (Sandbox / Production) Secrets Secrets provided by payment providers Please follow the instructions below to add a payment gateway.","title":"Payment Gateways"},{"location":"guide/shop/payment_gateway/#paypal","text":"If you want to test the payments with a sandbox account first, do the steps below, but with a SANDBOX application. Create a PayPal Business account or upgrade your account to a business account. Create a REST API app in the PayPal Developer settings. Make sure to create the app for the Live environment. Under LIVE APP SETTINGS , disable the Payouts feature and click Save . In your VyHub instance, create a PayPal payment gateway, select PRODUCTION environment and insert your Client ID and Client Secret . Click Create .","title":"PayPal"},{"location":"guide/shop/payment_gateway/#stripe","text":"If you want to test the payments with a test account first, do the steps below, but with a TEST application. Create a Stripe account or log into your existing one. In the Stripe Developers settings, navigate to API keys . In your VyHub instance, create a Stripe payment gateway, insert your Public Key and Private Key and select your desired Payment Methods . Click save and edit the payment gateway again. At the bottom, copy the Webhook URL to your clipboard. Back at the Stripe Developers settings, navigate to Webhooks . Click Add (hosted) endpoint , insert the copied URL to Endpoint URL and select Latest API version . Add the following events and click Add endpoint : checkout.session.completed invoice.paid customer.subscription.deleted Click Reveal on the Signing Secret and copy it to your clipboard. Back at the VyHub settings of your Stripe gateway, insert the copied secret into the Webhook Secret field and click Edit . (Optional) In the Stripe settings of the created webhook endpoint, click Send test event to test if everything works fine.","title":"Stripe"},{"location":"guide/shop/payment_gateway/#paysafecard","text":"Become a paysafecard partner . In your VyHub instance, create a Paysafecard payment gateway, insert your Secret Key and select your desired Environment . Click Create .","title":"Paysafecard"},{"location":"guide/shop/payment_gateway/#credits","text":"In your VyHub instance, create a credits payment gateway. Create packets that have Credits as reward, so that users can buy credits with real money. You will need an other payment gateway for this.","title":"Credits"},{"location":"guide/shop/payment_gateway/#coupons","text":"Coupon gateways can be used to manually approve coupons (e.g. paysafecard pins) In your VyHub instance, create a coupon payment gateway. After a purchase is made and coupons are entered by the user, the coupons need to be approved under the confirm purchases tab on the shop admin page.","title":"Coupons"},{"location":"guide/shop/reward/","text":"Rewards A reward needs to be assigned to a packet to be able to be sold. Attribute Description Name Name of reward Serverbundle Serverbundle which the reward is assigned to Event Event on which the reward functionality is executed Once / One Server Reward is only executed on one server in the serverbundle Type Reward Type","title":"Rewards"},{"location":"guide/shop/reward/#rewards","text":"A reward needs to be assigned to a packet to be able to be sold. Attribute Description Name Name of reward Serverbundle Serverbundle which the reward is assigned to Event Event on which the reward functionality is executed Once / One Server Reward is only executed on one server in the serverbundle Type Reward Type","title":"Rewards"},{"location":"guide/shop/tax/","text":"Tax Rules You can set tax rules for each country or for all of them at once.","title":"Tax Rules"},{"location":"guide/shop/tax/#tax-rules","text":"You can set tax rules for each country or for all of them at once.","title":"Tax Rules"}]}